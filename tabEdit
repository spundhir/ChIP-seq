#!/bin/bash
#PBS -l nodes=1:ppn=4

#### usage ####
usage() {
	echo Program: "tabEdit (edit or gather information about a tab delimited file)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: tabEdit -i <file> [OPTIONS]"
	echo "Options:"
	echo " -i <file>   [input tab delimited file (can be stdin)]"
    echo " -c          [count number of columns (default)]"
    echo " -r          [remove empty columns]"
    echo " -t          [convert spaces to tab]"
    echo " -m          [convert comma to tab]"
    echo " -h          [help]"
	echo
	exit 0
}

#### parse options ####
while getopts i:crtmh ARG; do
    case "$ARG" in
    i) INFILE=$OPTARG;;
    c) COUNT=1;;
    r) REMOVE=1;;
    t) TAB=1;;
    m) COMMA=1;;
    h) HELP=1;;
    esac
done

## usage, if necessary file and directories are given/exist
if [ -z "$INFILE" -o "$HELP" ]; then
	usage
fi

if [ ! -z "$TAB" ]; then
    if [ "$INFILE" == "stdin" ]; then
        while read LINE; do
            echo ${LINE}
        done
    else
        zless $INFILE 
    fi | perl -ane 'if($_=~/^#/) { print $_; next; } $line=""; foreach(@F) { $line.="$_\t"; } $line=~s/\t+$//g; $line=~s/\s+$//g; print "$line\n";'
elif [ ! -z "$COMMA" ]; then
    if [ "$INFILE" == "stdin" ]; then
        while read LINE; do
            echo ${LINE}
        done
    else
        zless $INFILE 
    fi | perl -an -F'/\,/' -e 'if($_=~/^#/) { print $_; next; } $line=""; foreach(@F) { $line.="$_\t"; } $line=~s/\t+$//g; $line=~s/\s+$//g; print "$line\n";'
else
    ## create temporary BED file if input is from stdin
    if [ "$INFILE" == "stdin" ]; then
        TMP=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        while read LINE; do
            echo ${LINE}
        done | perl -ane 'if($_=~/^#/) { print $_; next; } $line=""; foreach(@F) { $line.="$_\t"; } $line=~s/\t+$//g; $line=~s/\s+$//g; print "$line\n";' > $TMP
        INFILE=$TMP
    fi

    ## remove empty columns
    if [ ! -z "$REMOVE" ]; then
        #tr -s '\t' < $INFILE
        perl -ane '$_=~s/\s+$//g; print "$_\n";' < $INFILE
    else
        zless $INFILE | perl -an -F'/\t{1}/' -e 'print scalar(@F)."\n";' | sort | uniq -c
    fi

    ## remove temporary file, if exists
    if [ ! -z "$TMP" ]; then
        rm $TMP
    fi
fi
